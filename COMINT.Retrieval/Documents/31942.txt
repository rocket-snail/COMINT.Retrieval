merging with parallel processors consider two linearly
    ordered sets a, b, |a|=m, |b|=n, m<=n, and p, p<=m,
    parallel processors working synchronously. the paper presents
    an algorithm for merging a and b with the p parallel
    processors, which requires at most 2[log2 (2m+1)]+[3m/p] +
    [m/p][log2 (n/m)] steps. if n = (2^b)m (b an integer), the
    algorithm requires at most 2[log2 (m+1)] + [m/p](2+b) steps. in
    the case where m and n are of the same order of magnitude, i.e.
    n=km with k being a constant, the algorithm requires 2[log2
    (m+1)] + [m/p](3+k) steps. these performances compare very
    favorably with the previous best parallel merging algorithm,
    batcher's algorithm, which requires n/p + ((m+n)/2p)log2 m
    steps in the general case and km/p + ((k+1)/2)(m/p)log2 m in
    the special case where n=km. october, 1975 gavril, f. parallel
    processing, parallel merging, parallel binary insertion 5.31
    ca751005 jb january 6, 1978 10:50 am