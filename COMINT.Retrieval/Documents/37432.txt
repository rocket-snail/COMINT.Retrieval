one way of estimating frequencies of jumps in a program
    for the segmentation of a program it is useful to have a
    reasonable estimation of the values of s(ij), where s(ij) is
    the mean value of the number of jumps from the i-th instruction
    on to the j-th instruction in the run time. in the cases where
    the s(ij) are estimated directly, the structure of the whole
    program must be generally taken into account; therefore it is
    very difficult for the programmer and/or the translator to
    obtain a good estimation of the s(ij). it is easier to estimate
    not s(ij) but the quantities p(ij)=s(ij)*c(i)/sum[s(ij),
    j=1,n], where c(i) is an arbitrary positive constant for each
    i. although the p(ij) are, for each i, proportional to s(ij),
    the estimation of p(ij) is easier, because we must estimate
    only the "probabilities" of events where instruction i is
    executed after instruction i(i). this estimation can often be
    done without considering the structure of the whole program. in
    the first part of the paper, using the theory of the markov
    chains, an algorithm for the computation of the s(ij) from the
    p(ij) is found, and some ways of obtaining estimates of the
    p(ij) are given. in the second part a variant of this algorithm
    is derived, avoiding the necessity of computation involving
    large matrices. july, 1968 kral, j. object program reduction,
    supervisor calls decreasing, jump frequencies estimation,
    control transfers estimation, optimal program segmentation,
    markov chain program correspondence, program graph, one-entry
    subgraph, locally estimated jump frequencies, supervisor
    overhead decreasing, program segmentation algorithm, jump
    frequencies, program segmentation problem 4.11 4.19 4.39 4.49
    ca680702 jb february 22, 1978 3:05 pm